name: Build and Publish Documentation

on:
  push:
    branches:
      - main

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade wheel setuptools

      - name: Generate documentation
        run: |
          pip install sphinx
          sphinx-apidoc -f -o docs/source your_module
          sphinx-build -b html docs/source docs/build
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build

  pytest-and-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Apt install dependencies
        run: |
          sudo apt-get update
          sudo apt install tesseract-ocr
          sudo apt install libtesseract-dev
          sudo apt-get install ffmpeg
          sudo apt install antiword
          sudo apt install libreoffice

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pytest
        run: pytest --disable-warnings .

      - name: Test Code Coverage
        run: pytest --cov=querent

  package:
    runs-on: ubuntu-latest
    needs: pytest-and-package
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Package
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade wheel setuptools
          python setup.py sdist bdist_wheel

      - name: Publish to PyPI
        run: |
          echo "To Do - Publish to pypi"

        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
